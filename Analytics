#######################################################
# ARTelo Analytics: Regression in R 
#######################################################
# The data used in this analysis comes from our study.

data <- read.csv("171120.csv",header=TRUE) 	# headers were removed

# Reformat the data so that it is
# 1) Easy to use (add nice columns names)
# 2) Interpreted correctly by glm ()...

head(data) 	# you see data, but no column names

str(data)	# this shows that we need to tell R which columns contain factors
# it also shows us that there are some N/A values

# first, add factors to variables "PREGNANCY","TS_LENGTH_GROUP" and "BMI_ADEL" that had number attribute

data$PREGNANCY <-as.factor(data$PREGNANCY)
data$TS_LENGTH_GROUP <-as.factor(data$TS_LENGTH_GROUP)
data$BMI_ADEL <-as.factor(data$BMI_ADEL)

str(data)	# this shows that the correct columns are factors

#####################################
##
## Now we are ready for some logistic regression. First we'll create a very
## simple model that uses TS_LENGTH_GROUP to predict PREGNANCY
##
#####################################
 
## let's start super simple and see if TS_LENGTH_GROUP (SHRT/LONG) is a good
## predictor...
## First, let's just look at the raw data...
xtabs(~ PREGNANCY + TS_LENGTH_GROUP, data=data)
#         TS_LENGTH_GROUP	# 1=SHORT	2=LONG
# PREGNANCY  1  2		# 0= NON PREGNANT	1=PREGNANT
#         0  8  3
#         1  5 22
## Most of the women with short telomeres are not pregnant and most of the women with long telomeres are pregnant.
## Having short telomeres is likely to decrease the odds in being pregnant.
##    In other words, if a sample is from the short telomere group, the odds are against it that it
##    will be pregnant
## Having long telomers is likely to increase the odds in being pregnant...
##    In other words, if a sample is from the long telomere group, the odds are for it being pregnant




# installing the relevant packages for the analysis

install.packages("devtools")  # Helps output models to CSV
install.packages("gvlma")   # Makes plots

#
install.packages("nlme")
install.packages("ggplot2")
install.packages("broom")
install.packages("arm")

#read in analytic table

analytic <- read.csv(file="mydata.csv", header=TRUE, sep=",")

#Normal probability plot
#make linear model using grouping variable

AlcSleepTimeRegression = lm(SLEPTIM2 ~ ALCGRP, data=analytic) 

AlcSleepTimeRegression 

summary(AlcSleepTimeRegression)

#Make diagnostic plots

layout(matrix(c(1,2,3,4),2,2)) # optional 4 graphs/page 
plot(AlcSleepTimeRegression, 
	main = "Alcohol by Sleep Duration")
  

#copy to new dataset

ARTelo_TS <- analytic

#summary statistics

summary(BRFSS_sleep$SLEPTIM2)

#look at histogram

hist(BRFSS_sleep$SLEPTIM2, 
	main = "Histogram of SLEPTIM2",
	xlab = "Class SLEPTIM2",
	ylab = "Frequency",
	xlim=c(0,15), 
	ylim=c(0,20000),
	border = "red",
	col= "yellow",
	las = 1,
	breaks = 24)


hist(ARTelo_TS$TS_CLEAN, 
    main = "Histogram of T/S",
    xlab = "Class T/S",
    ylab = "Frequency",
    xlim=c(0,1.3), 
    ylim=c(0,10),
    border = "red",
    col= "yellow",
    las = 1,
    breaks = 24)
  
#categorize at median

ARTelo_TS$TSCAT <- "NA"
ARTelo_TS$TSCAT[ARTelo_TS$TS_CLEAN >0.936] <- 1
ARTelo_TS$TSCAT[ARTelo_TS$TS_CLEAN <=0.936] <- 0

table(ARTelo_TS$TSCAT, ARTelo_TS$TS_CLEAN)

#log transformation

BRFSS_sleep$LOGSLEEP <- log(BRFSS_sleep$SLEPTIM2)
ARTelo_TS$LOGTS <- log(ARTelo_TS$TS_CLEAN)

summary(ARTelo_TS$LOGTS)

hist(ARTelo_TS$LOGTS, 
      main = "Histogram of LOGTS",
      xlab = "Class LOGTS",
      ylab = "Frequency",
      xlim=c(-0.7,0.3), 
      ylim=c(0,10),
      border = "red",
      col= "yellow",
      las = 2,
      breaks = 40)


